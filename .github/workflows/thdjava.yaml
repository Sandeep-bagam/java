name: the home depot java project

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      skip_tests:
        description: 'Skip tests during build'
        required: false
        default: false
        type: boolean
      custom_message:
        description: 'Custom deployment message'
        required: false
        default: 'Manual deployment'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    # Skip build if tests are skipped and it's a manual trigger
    if: github.event.inputs.skip_tests != 'true' || github.event_name != 'workflow_dispatch'
    steps:
      - name: Checkout Java app repo
        uses: actions/checkout@v4
        
      - name: Setup Java build
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'  # Fixed: use actual version number
          cache: 'maven'
          
      - name: Install dependencies
        run: mvn clean install
        
      - name: Run tests
        if: github.event.inputs.skip_tests != 'true'
        run: mvn test
        
      - name: Build application
        run: mvn package -DskipTests=${{ github.event.inputs.skip_tests == 'true' }}
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app-build
          path: target/*.jar  # Fixed: upload actual build output

  deploy:
    name: Deploy Job
    runs-on: ubuntu-latest
    needs: build
    # Only deploy if it's main branch or manual trigger
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    # Use the selected environment for manual runs, default to staging for auto runs
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: java-app-build
          path: ./artifacts
          
      - name: Display deployment info
        run: |
          echo "Deploying to: ${{ github.event.inputs.environment || 'staging' }}"
          echo "Message: ${{ github.event.inputs.custom_message || 'Automatic deployment' }}"
          echo "Skip tests was: ${{ github.event.inputs.skip_tests || 'false' }}"
          
      - name: Deploy application
        run: |
          echo "Deploying Java application..."
          ls -la ./artifacts/
          # Add your actual deployment commands here