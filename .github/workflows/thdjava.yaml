name: the home depot java project

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      skip_tests:
        description: 'Skip tests during build'
        required: false
        default: false
        type: boolean
      custom_message:
        description: 'Custom deployment message'
        required: false
        default: 'Manual deployment'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.inputs.skip_tests != 'true' || github.event_name != 'workflow_dispatch'
    steps:            
      - name: Checkout Java app repo
        uses: actions/checkout@v4
        
      - name: Setup Java build
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Manual Approval for Production Deployment
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: sandeep-bagam
          minimum-approvals: 1
          issue-title: "ðŸš€ Production Deployment Approval Required"
          issue-body: |
            **Deployment Details:**
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            - Environment: Production
            - Triggered by: ${{ github.actor }}
            
            Please review and approve this production deployment.
            
            **To approve:** Comment `approve` or `approved`
            **To deny:** Comment `deny` or `denied`
          exclude-workflow-initiator-as-approver: false
          fail-on-denial: true

      - name: Install dependencies
        run: mvn clean install
        
      - name: Run tests
        if: github.event.inputs.skip_tests != 'true'
        run: mvn test
        
      - name: Build application
        run: mvn package -DskipTests=${{ github.event.inputs.skip_tests == 'true' }}
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app-build
          path: target/*.jar

  # NEW: Manual approval job for production
  approve-production:
    name: Approve Production Deployment
    runs-on: ubuntu-latest
    needs: build
    if: |
      (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') &&
      (github.event.inputs.environment == 'production' || 
       (github.event_name == 'push' && github.ref == 'refs/heads/main'))
    environment: 
      name: production-approval
      # This creates a manual approval gate!
    steps:
      - name: Manual approval checkpoint
        run: |
          echo "ðŸ›‘ This deployment requires manual approval"
          echo "Deploying to: ${{ github.event.inputs.environment || 'production' }}"
          echo "Message: ${{ github.event.inputs.custom_message || 'Automatic deployment' }}"
          echo "Build number: ${{ github.run_number }}"

  deploy:
    name: Deploy Job
    runs-on: ubuntu-latest
    needs: [build, approve-production]
    # Skip approval job dependency for staging
    if: |
      always() && 
      needs.build.result == 'success' &&
      (needs.approve-production.result == 'success' || 
       needs.approve-production.result == 'skipped')
    environment: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: java-app-build
          path: ./artifacts
          
      - name: Display deployment info
        run: |
          echo "Deploying to: ${{ github.event.inputs.environment || 'staging' }}"
          echo "Message: ${{ github.event.inputs.custom_message || 'Automatic deployment' }}"
          echo "Skip tests was: ${{ github.event.inputs.skip_tests || 'false' }}"
          
      - name: Deploy application
        run: |
          echo "Deploying Java application..."
          ls -la ./artifacts/
          # Add your actual deployment commands here